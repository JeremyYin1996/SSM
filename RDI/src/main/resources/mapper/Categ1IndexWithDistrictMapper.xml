<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sqc.dao.Categ1IndexWithDistrictMapper">
  <resultMap id="BaseResultMap" type="com.sqc.bean.Categ1IndexWithDistrict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="categ_id" jdbcType="CHAR" property="categId" />
    <result column="district_id" jdbcType="CHAR" property="districtId" />
    <result column="categ_index" jdbcType="REAL" property="categIndex" />
    <result column="days" jdbcType="REAL" property="days" />
    <result column="sales" jdbcType="REAL" property="sales" />
    <result column="statis_date" jdbcType="DATE" property="statisDate" />
  </resultMap>
  <resultMap id="WithDistrictResultMap" type="com.sqc.bean.Categ1IndexWithDistrict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="categ_id" jdbcType="CHAR" property="categId" />
    <result column="district_id" jdbcType="CHAR" property="districtId" />
    <result column="categ_index" jdbcType="REAL" property="categIndex" />
    <result column="days" jdbcType="REAL" property="days" />
    <result column="sales" jdbcType="REAL" property="sales" />
    <result column="statis_date" jdbcType="DATE" property="statisDate" />
    <association property="category" javaType="com.sqc.bean.Category">
    	<id column="cid" property="categId"/>
    	<result column="categ_name" jdbcType="VARCHAR" property="categName" />
    	<result column="level" jdbcType="CHAR" property="level" />    
    </association>
    <association property="district" javaType="com.sqc.bean.District">
    	<id column="did" property="districtId"/>
    	<result column="province" jdbcType="VARCHAR" property="province" />
    	<result column="city" jdbcType="VARCHAR" property="city" />
    	<result column="county" jdbcType="VARCHAR" property="county" />
    </association>
  </resultMap>
  
   <resultMap id="WithDisResultMap" type="com.sqc.bean.Categ1IndexWithDistrict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="categ_id" jdbcType="CHAR" property="categId" />
    <result column="district_id" jdbcType="CHAR" property="districtId" />
    <result column="categ_index" jdbcType="REAL" property="categIndex" />
    <result column="days" jdbcType="REAL" property="days" />
    <result column="sales" jdbcType="REAL" property="sales" />
    <result column="statis_date" jdbcType="DATE" property="statisDate" />
    <association property="district" javaType="com.sqc.bean.District">
    	<id column="did" property="districtId"/>
    	<result column="province" jdbcType="VARCHAR" property="province" />
    	<result column="city" jdbcType="VARCHAR" property="city" />
    	<result column="county" jdbcType="VARCHAR" property="county" />
    </association>
  </resultMap>
  
  
      <!-- selectCompareIndexWithDis -->
     <resultMap id="WarningWithDistrictResultMap" type="com.sqc.bean.Categ1IndexWithDistrict">
     <id column="id" jdbcType="BIGINT" property="id" />
    <result column="categ_id" jdbcType="CHAR" property="categId" />
    <result column="district_id" jdbcType="CHAR" property="districtId" />
    <result column="categ_index" jdbcType="REAL" property="categIndex" />
    <result column="categ_avg_price" jdbcType="REAL" property="categAvgPrice" />
    <result column="days" jdbcType="REAL" property="days" />
    <result column="sales" jdbcType="REAL" property="sales" />
    <result column="statis_date" jdbcType="DATE" property="statisDate" />
    <association property="category" javaType="com.sqc.bean.Category">
    	<id column="cid" property="categId"/>
    	<result column="categ_name" jdbcType="VARCHAR" property="categName" />
    	<result column="level" jdbcType="CHAR" property="level" />    
    </association>
    <association property="district" javaType="com.sqc.bean.District">
    	<id column="did" property="districtId"/>
    	<result column="province" jdbcType="VARCHAR" property="province" />
    	<result column="city" jdbcType="VARCHAR" property="city" />
    	<result column="county" jdbcType="VARCHAR" property="county" />
    </association>
          <association property="categ1Index" javaType="com.sqc.bean.Categ1Index">
        <id column="cityindex_id" jdbcType="INTEGER" property="id" />
        <result column="city_categ_index" jdbcType="REAL" property="categIndex" />
        <result column="city_categ_avg_price" jdbcType="REAL" property="categAvgPrice" />
    </association>
     </resultMap>
     
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, categ_id, district_id, 
    FORMAT(categ_index, 3)  as categ_index, 
    days, sales, statis_date
  </sql>
 
   <sql id="With_District_Column_List">
     a.`categ_id` cid,a.`categ_name`,a.`level`,
     b.`categ_id`,b.`district_id`,
     FORMAT(b.`categ_index`, 3)  as categ_index,
     b.`days`,b.`sales`,b.`statis_date`,
     c.`district_id` did,c.`province`,c.`city`,c.`county`
  </sql>
  
   <sql id="With_Dis_Column_List">
     b.`categ_id`,b.`district_id`,
     FORMAT(b.`categ_index`, 3)  as categ_index,
     b.`days`,b.`sales`,b.`statis_date`,
     c.`district_id` did,c.`province`,c.`city`,c.`county`
  </sql>
  
   <!-- List<Categ1IndexWithDistrict> selectByStatisDateWithCategNameAndDistrict(Map<String, Object> map); -->
  <select id="selectByStatisDateWithCategNameAndDistrict" parameterType="map" resultMap="WithDistrictResultMap">
     select
    <if test="distinct">
      distinct
    </if>
    <include refid="With_District_Column_List" />
     FROM t_category a JOIN  t_categ1index_with_district  b ON a.`categ_id`=b.`categ_id`
     JOIN t_district c ON b.`district_id`=c.`district_id`
     WHERE c.district_id=#{districtId}
     AND YEAR(b.`statis_date`)=#{statisYear} AND MONTH(b.`statis_date`)=#{statisMonth}
     <if test="categName!=null"> and	
			a.categ_name LIKE CONCAT('%',#{categName},'%')
	</if>
     <if test="indexSort!=null" >
			order by 
	 </if>
	 <if test="indexSort=='desc'">
			b.categ_index DESC
	 </if>
	 <if test="indexSort=='asc'">
			b.categ_index ASC
	 </if>
  </select>
  
  
    
   <!-- 	List<Categ1IndexWithDistrict> selectCompareIndexWithDis(Map<String, Object> map); -->
   <select id="selectCompareIndexWithDis" parameterType="map" resultMap="WarningWithDistrictResultMap">   
SELECT b.`categ_id`,c.`categ_name`,d.`county`,b.`categ_index` categ_index,a.`categ_index` city_categ_index,b.`statis_date`
FROM `t_category` c JOIN `t_categ1index` a ON c.`categ_id`=a.`categ_id` 
JOIN `t_categ1index_with_district` b  ON a.`categ_id`=b.`categ_id` AND a.`statis_date`=b.`statis_date`
JOIN `t_district` d ON b.`district_id`=d.`district_id`
WHERE year(b.`statis_date`)=#{year}   
AND month(b.`statis_date`)=#{month}
AND b.`district_id`=#{districtId}
AND b.`categ_index`NOT BETWEEN (1+#{decrease})*a.`categ_index`AND (1+#{rise})*a.`categ_index`
      <if test="classifybylargeId!=null and classifybylargeId!=''">
       AND b.`categ_id`=#{classifybylargeId}
    </if>
     <if test="categName!=null"> and	
			c.categ_name LIKE CONCAT('%',#{categName},'%')
	</if>
  </select>
  
  <!-- List<Map<String, Object>> selectRecentCateg1IndicesById(Map<String, String> map); -->  
  <select id="selectRecentCateg1IndicesById" parameterType="map" resultType="map">
		select DATE_FORMAT(t.maxtime,"%Y-%m") maxtime,FORMAT(baselyindex, 3) as baselyindex,
			FORMAT(monthlyindex, 3) as monthlyindex ,
			FORMAT(yearlyindex, 3) as yearlyindex 
		from(
			select max(statis_date) as maxtime,baselyindex,monthlyindex,yearlyindex
		    from v_categ1index_with_district 
		    where categ_id=#{categId}
		    and district_id=#{districtId}
		    group by  statis_date ) t
		where t.maxtime BETWEEN SUBDATE(CURDATE(),INTERVAL 12 month) AND CURDATE();
	</select>
  
  	<!--根据药品Id和统计日期选择，主要为了进行横向对比
	List<Categ1IndexWithDistrict> selectByIdAndStatisDate(Map<String, Object> map); 
	 -->
   <select id="selectByIdAndStatisDate" parameterType="map" resultMap="WithDisResultMap">
    select 
    <include refid="With_Dis_Column_List" />
    from t_categ1index_with_district b join t_district c on b.district_id=c.district_id
    where categ_id = #{categId}
    and YEAR(statis_date)=#{year} AND MONTH(statis_date)=#{month}
  </select>
  
  <select id="selectByExample" parameterType="com.sqc.bean.Categ1IndexWithDistrictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_categ1index_with_district
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_categ1index_with_district
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_categ1index_with_district
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sqc.bean.Categ1IndexWithDistrictExample">
    delete from t_categ1index_with_district
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sqc.bean.Categ1IndexWithDistrict">
    insert into t_categ1index_with_district (id, categ_id, district_id, 
      categ_index, days, sales, statis_date
      )
    values (#{id,jdbcType=INTEGER}, #{categId,jdbcType=CHAR}, #{districtId,jdbcType=CHAR}, 
      #{categIndex,jdbcType=REAL}, #{days,jdbcType=REAL}, #{sales,jdbcType=REAL}, #{statisDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sqc.bean.Categ1IndexWithDistrict">
    insert into t_categ1index_with_district
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categId != null">
        categ_id,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="categIndex != null">
        categ_index,
      </if>
      <if test="days != null">
        days,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="statisDate != null">
        statis_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categId != null">
        #{categId,jdbcType=CHAR},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=CHAR},
      </if>
      <if test="categIndex != null">
        #{categIndex,jdbcType=REAL},
      </if>
      <if test="days != null">
        #{days,jdbcType=REAL},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=REAL},
      </if>
      <if test="statisDate != null">
        #{statisDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sqc.bean.Categ1IndexWithDistrictExample" resultType="java.lang.Long">
    select count(*) from t_categ1index_with_district
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_categ1index_with_district
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categId != null">
        categ_id = #{record.categId,jdbcType=CHAR},
      </if>
      <if test="record.districtId != null">
        district_id = #{record.districtId,jdbcType=CHAR},
      </if>
      <if test="record.categIndex != null">
        categ_index = #{record.categIndex,jdbcType=REAL},
      </if>
      <if test="record.days != null">
        days = #{record.days,jdbcType=REAL},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=REAL},
      </if>
      <if test="record.statisDate != null">
        statis_date = #{record.statisDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_categ1index_with_district
    set id = #{record.id,jdbcType=INTEGER},
      categ_id = #{record.categId,jdbcType=CHAR},
      district_id = #{record.districtId,jdbcType=CHAR},
      categ_index = #{record.categIndex,jdbcType=REAL},
      days = #{record.days,jdbcType=REAL},
      sales = #{record.sales,jdbcType=REAL},
      statis_date = #{record.statisDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sqc.bean.Categ1IndexWithDistrict">
    update t_categ1index_with_district
    <set>
      <if test="categId != null">
        categ_id = #{categId,jdbcType=CHAR},
      </if>
      <if test="districtId != null">
        district_id = #{districtId,jdbcType=CHAR},
      </if>
      <if test="categIndex != null">
        categ_index = #{categIndex,jdbcType=REAL},
      </if>
      <if test="days != null">
        days = #{days,jdbcType=REAL},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=REAL},
      </if>
      <if test="statisDate != null">
        statis_date = #{statisDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sqc.bean.Categ1IndexWithDistrict">
    update t_categ1index_with_district
    set categ_id = #{categId,jdbcType=CHAR},
      district_id = #{districtId,jdbcType=CHAR},
      categ_index = #{categIndex,jdbcType=REAL},
      days = #{days,jdbcType=REAL},
      sales = #{sales,jdbcType=REAL},
      statis_date = #{statisDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>